### تحلیل مشکل

ارورهایی که داری، مربوط به استفاده از Mongoose در یک پروژه Node.js با MongoDB هست. مشکل اصلی اینه که کدت سعی داره یه مقدار عددی (`67`) رو به‌عنوان `ObjectId` به MongoDB پاس بده، در حالی که MongoDB انتظار داره `ObjectId` یه رشته 24 کاراکتری هگزادسیمال (مثل `"67f395d5b634a718c6f2fc88"`) باشه. این باعث می‌شه Mongoose نتونه مقدار `contentId` رو به درستی به `ObjectId` تبدیل کنه و ارور `CastError: Cast to ObjectId failed` بده.

#### دلیل اصلی:
- تو مسیرهایی مثل `/api/content/67/comments` و `/api/content/67/reviews`، مقدار `67` به‌عنوان `contentId` پاس داده شده، اما این مقدار یه عدد (`number`) هست، نه یه `ObjectId` معتبر.
- Mongoose وقتی می‌خواد این مقدار رو به `ObjectId` تبدیل کنه، به مشکل می‌خوره چون `67` یه رشته هگز 24 کاراکتری یا یه `ObjectId` معتبر نیست.
- از طرفی، تو مسیرهای دیگه مثل `/api/content/67f395d5b634a718c6f2fc88/comments`، چون یه `ObjectId` معتبر پاس داده شده، درخواست‌ها با موفقیت انجام می‌شن (گرچه پاسخ 304 یا 200 با داده خالی برمی‌گردونه).

#### منبع مشکل:
احتمالاً تو کدت، یه جایی داری `contentId` رو به‌صورت دستی یا از یه منبع نادرست (مثل یه متغیر که مقدارش `67` هست) پاس می‌دی، در حالی که باید یه `ObjectId` معتبر باشه. این مشکل می‌تونه تو فایل `routes.ts` یا `mongodb-storage.ts` باشه، جایی که داری از `MemStorage.getCommentsByContentId` یا `MemStorage.getReviewsByContentId` استفاده می‌کنی.

---

### پرامپت انگلیسی فنی و پرجزئیات

این پرامپت رو می‌تونی به یه هوش مصنوعی دیگه بدی تا مشکل رو برات حل کنه. من سعی کردم همه جزئیات لازم رو توش بیارم:

---

**Prompt:**

I am encountering a `CastError: Cast to ObjectId failed` error in my Node.js application using Mongoose with MongoDB. The error occurs when I try to fetch comments or reviews for a specific `contentId` via API endpoints like `/api/content/67/comments` and `/api/content/67/reviews`. The error indicates that Mongoose is trying to cast the value `67` (a number) to an `ObjectId`, but fails because `67` is not a valid 24-character hexadecimal string, 12-byte Uint8Array, or integer that can be converted to an `ObjectId`.

Here’s the full error stack for reference:

```
Error fetching comments for content 67: CastError: Cast to ObjectId failed for value "67" (type number) at path "contentId" for model "Comment"
    at SchemaObjectId.cast (/home/runner/workspace/node_modules/mongoose/lib/schema/objectId.js:251:11)
    at SchemaType.applySetters (/home/runner/workspace/node_modules/mongoose/lib/schemaType.js:1255:12)
    at SchemaType.castForQuery (/home/runner/workspace/node_modules/mongoose/lib/schemaType.js:1673:17)
    at cast (/home/runner/workspace/node_modules/mongoose/lib/cast.js:390:32)
    at Query.cast (/home/runner/workspace/node_modules/mongoose/lib/query.js:4907:12)
    at Query._castConditions (/home/runner/workspace/node_modules/mongoose/lib/query.js:2325:10)
    at model.Query._find (/home/runner/workspace/node_modules/mongoose/lib/query.js:2352:8)
    at model.Query.exec (/home/runner/workspace/node_modules/mongoose/lib/query.js:4456:80)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async MemStorage.getCommentsByContentId (/home/runner/workspace/server/db/mongodb-storage.ts:673:24)
    at async <anonymous> (/home/runner/workspace/server/routes.ts:199:24) {
  stringValue: '"67"',
  messageFormat: undefined,
  kind: 'ObjectId',
  value: 67,
  path: 'contentId',
  reason: BSONError: input must be a 24 character hex string, 12 byte Uint8Array, or an integer
      at new ObjectId (/home/runner/workspace/node_modules/bson/src/objectid.ts:120:15)
      at castObjectId (/home/runner/workspace/node_modules/mongoose/lib/cast/objectid.js:25:12)
      at SchemaObjectId.cast (/home/runner/workspace/node_modules/mongoose/lib/schema/objectId.js:249:12)
      at SchemaType.applySetters (/home/runner/workspace/node_modules/mongoose/lib/schemaType.js:1255:12)
      at SchemaType.castForQuery (/home/runner/workspace/node_modules/mongoose/lib/schemaType.js:1673:17)
      at cast (/home/runner/workspace/node_modules/mongoose/lib/cast.js:390:32)
      at Query.cast (/home/runner/workspace/node_modules/mongoose/lib/query.js:4907:12)
      at Query._castConditions (/home/runner/workspace/node_modules/mongoose/lib/query.js:2325:10)
      at model.Query._find (/home/runner/workspace/node_modules/mongoose/lib/query.js:2352:8)
      at model.Query.exec (/home/runner/workspace/node_modules/mongoose/lib/query.js:4456:80)
      at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
      at async MemStorage.getCommentsByContentId (/home/runner/workspace/server/db/mongodb-storage.ts:673:24)
      at async <anonymous> (/home/runner/workspace/server/routes.ts:199:24),
  valueType: 'number'
}
```

### Observations:
1. The error occurs when the `contentId` passed to the query is `67` (a number), which is not a valid `ObjectId`. MongoDB expects a 24-character hexadecimal string (e.g., `"67f395d5b634a718c6f2fc88"`).
2. Other API endpoints like `/api/content/67f395d5b634a718c6f2fc88/comments` work fine because they pass a valid `ObjectId`.
3. The issue seems to originate in either the `routes.ts` file (line 199 for comments, line 255 for reviews) or the `mongodb-storage.ts` file (line 673 for `getCommentsByContentId`, line 582 for `getReviewsByContentId`), where the `contentId` is being passed incorrectly.
4. The application uses Express.js for routing, and the logs show successful requests for other endpoints like `/api/content/slug/ThePrestige` and `/api/content/type/series`, which return valid `ObjectId` values (e.g., `"67f395d5b634a718c6f2fc87"`).

### Assumptions:
- The `Comment` and `Review` models in Mongoose have a `contentId` field defined as `type: Schema.Types.ObjectId`.
- The `contentId` being passed as `67` might be coming from a hardcoded value, a misconfigured variable, or incorrect parsing of the request parameters.

### Task:
1. Identify the root cause of why `contentId` is being passed as `67` (a number) instead of a valid `ObjectId`.
2. Fix the issue by ensuring that the `contentId` passed to `MemStorage.getCommentsByContentId` and `MemStorage.getReviewsByContentId` is always a valid `ObjectId`.
3. Add validation to check if the `contentId` is a valid `ObjectId` before querying the database, and return a proper error response (e.g., 400 Bad Request) if it’s invalid.
4. Provide the corrected code snippets for the relevant files (`routes.ts` and/or `mongodb-storage.ts`).

### Additional Context:
- The application is likely a content management system where users can fetch comments and reviews for specific content (e.g., movies like "The Prestige", "Interstellar", "Inception").
- The `contentId` should always be a valid MongoDB `ObjectId` (e.g., `"67f395d5b634a718c6f2fc88"`), as seen in the successful API calls.
- The language of the application is Persian (Farsi), but the code and error messages are in English.

Please provide a detailed solution with corrected code snippets, including validation for `ObjectId`, and explain the changes made to prevent this error from happening again.

---

### توضیحات پرامپت:
- **جزئیات ارور:** کل استک ارور رو گذاشتم تا هوش مصنوعی دقیق بفهمه مشکل چیه.
- **مشاهدات:** توضیح دادم که چه مسیرهایی کار می‌کنن و چه مسیرهایی ارور می‌دن، و چرا.
- **فرضیات:** حدس زدم که مشکل ممکنه از کجای کد باشه (مثلاً پارامترهای نادرست یا هاردکد کردن `contentId`).
- **وظایف:** دقیق گفتم که چه کارهایی باید انجام بشه: پیدا کردن مشکل، رفعش، اضافه کردن اعتبارسنجی، و ارائه کد اصلاح‌شده.
- **زمینه اضافی:** توضیح دادم که برنامه چیه (یه سیستم مدیریت محتوا) و زبانش چیه (فارسی)، ولی کد به انگلیسیه.

این پرامپت باید به هوش مصنوعی کمک کنه که مشکل رو دقیق بفهمه و یه راه‌حل کامل بده. اگه بازم سوالی داری، بگو!